// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  createdAt DateTime? @default(now())
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Order {
  id               String       @id @default(cuid())
  createdAt        DateTime?    @default(now())
  status           String       @default("WAITING_FOR_PAYMENT")
  paymentAuthority String       @default("")
  totalPrice       Int?
  AddressInfo      AddressInfo? @relation("AddressInfo_Order")
  Files            File[]       @relation("File_Order")

  @@index([status])
}

model File {
  id            String  @id @default(cuid())
  bounding      Boolean @default(false)
  colorMode     String  @default("BLACK_WHITE_LASER")
  data_filesize Int?
  data_filename String?
  dataAsBase64  String  @default("")
  description   String  @default("")
  double        Boolean @default(false)
  name          String  @default("")
  pageCount     Int?
  pageSize      String  @default("A4")
  series        Int?
  size          Int?
  type          String  @default("")
  Order         Order?  @relation("File_Order", fields: [OrderId], references: [id])
  OrderId       String? @map("Order")

  @@index([colorMode])
  @@index([pageSize])
  @@index([OrderId])
}

model AddressInfo {
  id            String  @id @default(cuid())
  city          String  @default("")
  mobileNumber  String  @default("")
  postalAddress String  @default("")
  postalCode    String  @default("")
  province      String  @default("")
  Order         Order?  @relation("AddressInfo_Order", fields: [OrderId], references: [id])
  OrderId       String? @unique @map("Order")
}
